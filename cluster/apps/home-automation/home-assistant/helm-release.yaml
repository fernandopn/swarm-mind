---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
spec:
  interval: 1h
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: home-assistant
      version: 13.4.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
  dependsOn:
    - name: mosquitto
      namespace: home-automation
    - name: ingress-nginx
      namespace: networking
  values:
    # https://github.com/k8s-at-home/charts/blob/master/charts/stable/home-assistant/values.yaml
    # Backup
    podAnnotations:
      backup.velero.io/backup-volumes: config

    image:
      repository: homeassistant/home-assistant
      tag: 2022.10.3
    env:
      TZ: "${SECRET_TIMEZONE}"

    metrics:
      enabled: true
      serviceMonitor:
        labels:
          release: kube-prometheus-stack
        bearerTokenSecret:
          name: "prometheus-secrets"
          key: "prom-token"
      prometheusRule:
        enabled: true
        labels:
          role: alert-rules
        rules:
          - alert: EsphomeRebooted
            annotations:
              description: ESPHome {{ $labels.friendly_name }} rebooted.
              summary: A esphome device had rebooted.
            expr: |
              delta(hass_esphome_uptime[10m]) <= 0
            for: 0m
            labels:
              severity: warning

    # Pod
    resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "512Mi"
        cpu: "1"

    # Persistence
    persistence:
      config:
        enabled: true
        existingClaim: home-assistant

    # Homekit integration
    hostNetwork: true
    service:
      homekit:
        enabled: true
        type: "LoadBalancer"
        loadBalancerIP: 10.0.6.226
        ports:
          homekit:
            enabled: true
            port: 21065
            protocol: TCP

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          coredns.io/hostname: &host "home-assistant.home.${SECRET_DOMAIN}"
          hajimari.io/enable: "true"
          hajimari.io/icon: "home"
          nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/api/verify"
          nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8"
        hosts:
          - host: *host
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: home-assistant-tls

    addons:
      codeserver:
        enabled: true
        workingDir: "/config"
        args:
          - --user-data-dir
          - "/config/.vscode"
          - --auth
          - "none"
        volumeMounts:
          - name: config
            mountPath: /config
        ingress:
          enabled: true
          ingressClassName: "nginx"
          annotations:
            cert-manager.io/cluster-issuer: letsencrypt-production
            coredns.io/hostname: &host-vscode "home-assistant-vscode.home.${SECRET_DOMAIN}"
            nginx.ingress.kubernetes.io/auth-signin: "https://auth.${SECRET_DOMAIN}"
            nginx.ingress.kubernetes.io/auth-url: "https://auth.${SECRET_DOMAIN}/api/verify"
          hosts:
            - host: *host-vscode
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - *host-vscode
              secretName: home-assistant-vscode-tls
