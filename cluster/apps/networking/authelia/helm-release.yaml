---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authelia
spec:
  releaseName: authelia
  chart:
    spec:
      # renovate: registryUrl=https://charts.authelia.com
      chart: authelia
      version: 0.8.38
      sourceRef:
        kind: HelmRepository
        name: authelia
        namespace: flux-system
  interval: 1m
  install:
    remediation:
      retries: 3
  values:
    # https://github.com/authelia/chartrepo/blob/master/charts/authelia/values.yaml
    image:
      # registry: ghcr.io
      registry: docker.io
      repository: authelia/authelia
      tag: 4.36.9

    domain: "${SECRET_DOMAIN}"

    pod:
      kind: Deployment
      strategy:
        type: Recreate
      annotations:
        backup.velero.io/backup-volumes: authelia

    # Persistence of /config
    persistence:
      enabled: true
      existingClaim: authelia

    # Login ingress
    ingress:
      enabled: true
      subdomain: auth
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        coredns.io/hostname: "admin.${SECRET_DOMAIN}"
        external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_DOMAIN}
        external-dns/is-public: "true"
        kubernetes.io/ingress.class: nginx

    secret:
      jwt:
        value: ${SECRET_AUTHELIA_JWT}
      smtp:
        value: ${SECRET_SMTP_PASSWORD}
      storageEncryptionKey:
        value: ${SECRET_AUTHELIA_STORAGE_ENCRYPTION_KEY}

    configMap:
      theme: dark
      default_redirection_url: "https://home-assistant.home.${SECRET_DOMAIN}"

      # authentication methods
      authentication_backend:
        ldap:
          enabled: false
        file:
          enabled: true

      # Track sessions
      session:
        expiration: 4h
        inactivity: 30m
        redis:
          enabled: false

      # Persist sessions
      storage:
        local:
          enabled: true
        postgres:
          enabled: false

      notifier:
        filesystem:
          enabled: false
        smtp:
          enabledSecret: true
          host: ${SECRET_SMTP_SERVER}
          port: ${SECRET_SMTP_PORT}
          timeout: 5s
          username: ${SECRET_SMTP_USERNAME}
          sender: ${SECRET_SMTP_USERNAME}
          identifier: ${SECRET_DOMAIN}

      # The Rules!!!
      access_control:
        default_policy: deny

        networks:
          - name: home
            networks:
              - 10.0.0.0/8

        rules:
          - domain:
              # iot
              - &homeassistant "home-assistant.home.${SECRET_DOMAIN}"
            policy: bypass
            networks:
              - home

          # At Home
          - domain:
              # iot
              - "home-assistant-vscode.home.${SECRET_DOMAIN}"
              - "node-red.home.${SECRET_DOMAIN}"
              - "zigbee2mqtt-vscode.home.${SECRET_DOMAIN}"
              - "zigbee2mqtt.home.${SECRET_DOMAIN}"
              - "esphome-vscode.home.${SECRET_DOMAIN}"
              - "esphome.home.${SECRET_DOMAIN}"
            policy: one_factor
            subject:
              - "group:admins"
            networks:
              - home

          # Away
          - domain:
              - &echo-server "echo-server.${SECRET_DOMAIN}"
            policy: two_factor
            subject:
              - "group:admins"
